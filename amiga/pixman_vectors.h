
/* This file was generated by idltool 53.5. Do not edit */

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef PIXMAN_H
#include <pixman.h>
#endif

extern uint32               VARARGS68K _impl_Obtain(struct PixmanIFace *);
extern uint32               VARARGS68K _impl_Release(struct PixmanIFace *);
extern void                 VARARGS68K _impl_pixman_transform_init_identity(struct PixmanIFace *,  struct pixman_transform * matrix);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_point_3d(struct PixmanIFace *, const struct pixman_transform * transform,  struct pixman_vector * vector);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_point(struct PixmanIFace *, const struct pixman_transform * transform,  struct pixman_vector * vector);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_multiply(struct PixmanIFace *,  struct pixman_transform * dst, const struct pixman_transform * l, const struct pixman_transform * r);
extern void                 VARARGS68K _impl_pixman_transform_init_scale(struct PixmanIFace *,  struct pixman_transform * t,  pixman_fixed_t sx,  pixman_fixed_t sy);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_scale(struct PixmanIFace *,  struct pixman_transform * forward,  struct pixman_transform * reverse,  pixman_fixed_t sx,  pixman_fixed_t sy);
extern void                 VARARGS68K _impl_pixman_transform_init_rotate(struct PixmanIFace *,  struct pixman_transform * t,  pixman_fixed_t cos,  pixman_fixed_t sin);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_rotate(struct PixmanIFace *,  struct pixman_transform * forward,  struct pixman_transform * reverse,  pixman_fixed_t c,  pixman_fixed_t s);
extern void                 VARARGS68K _impl_pixman_transform_init_translate(struct PixmanIFace *,  struct pixman_transform * t,  pixman_fixed_t tx,  pixman_fixed_t ty);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_translate(struct PixmanIFace *,  struct pixman_transform * forward,  struct pixman_transform * reverse,  pixman_fixed_t tx,  pixman_fixed_t ty);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_bounds(struct PixmanIFace *, const struct pixman_transform * matrix,  struct pixman_box16 * b);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_invert(struct PixmanIFace *,  struct pixman_transform * dst, const struct pixman_transform * src);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_is_identity(struct PixmanIFace *, const struct pixman_transform * t);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_is_scale(struct PixmanIFace *, const struct pixman_transform * t);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_is_int_translate(struct PixmanIFace *, const struct pixman_transform * t);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_is_inverse(struct PixmanIFace *, const struct pixman_transform * a, const struct pixman_transform * b);
extern pixman_bool_t        VARARGS68K _impl_pixman_transform_from_pixman_f_transform(struct PixmanIFace *,  struct pixman_transform * t, const struct pixman_f_transform * ft);
extern void                 VARARGS68K _impl_pixman_f_transform_from_pixman_transform(struct PixmanIFace *,  struct pixman_f_transform * ft, const struct pixman_transform * t);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_invert(struct PixmanIFace *,  struct pixman_f_transform * dst, const struct pixman_f_transform * src);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_point(struct PixmanIFace *, const struct pixman_f_transform * t,  struct pixman_f_vector * v);
extern void                 VARARGS68K _impl_pixman_f_transform_point_3d(struct PixmanIFace *, const struct pixman_f_transform * t,  struct pixman_f_vector * v);
extern void                 VARARGS68K _impl_pixman_f_transform_multiply(struct PixmanIFace *,  struct pixman_f_transform * dst, const struct pixman_f_transform * l, const struct pixman_f_transform * r);
extern void                 VARARGS68K _impl_pixman_f_transform_init_scale(struct PixmanIFace *,  struct pixman_f_transform * t,  double sx,  double sy);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_scale(struct PixmanIFace *,  struct pixman_f_transform * forward,  struct pixman_f_transform * reverse,  double sx,  double sy);
extern void                 VARARGS68K _impl_pixman_f_transform_init_rotate(struct PixmanIFace *,  struct pixman_f_transform * t,  double cos,  double sin);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_rotate(struct PixmanIFace *,  struct pixman_f_transform * forward,  struct pixman_f_transform * reverse,  double c,  double s);
extern void                 VARARGS68K _impl_pixman_f_transform_init_translate(struct PixmanIFace *,  struct pixman_f_transform * t,  double tx,  double ty);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_translate(struct PixmanIFace *,  struct pixman_f_transform * forward,  struct pixman_f_transform * reverse,  double tx,  double ty);
extern pixman_bool_t        VARARGS68K _impl_pixman_f_transform_bounds(struct PixmanIFace *, const struct pixman_f_transform * t,  struct pixman_box16 * b);
extern void                 VARARGS68K _impl_pixman_f_transform_init_identity(struct PixmanIFace *,  struct pixman_f_transform * t);
extern void                 VARARGS68K _impl_pixman_region_set_static_pointers(struct PixmanIFace *,  pixman_box16_t * empty_box,  pixman_region16_data_t * empty_data,  pixman_region16_data_t * broken_data);
extern void                 VARARGS68K _impl_pixman_region_init(struct PixmanIFace *,  pixman_region16_t * region);
extern void                 VARARGS68K _impl_pixman_region_init_rect(struct PixmanIFace *,  pixman_region16_t * region,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_init_rects(struct PixmanIFace *,  pixman_region16_t * region, const pixman_box16_t * boxes,  int count);
extern void                 VARARGS68K _impl_pixman_region_init_with_extents(struct PixmanIFace *,  pixman_region16_t * region,  pixman_box16_t * extents);
extern void                 VARARGS68K _impl_pixman_region_init_from_image(struct PixmanIFace *,  pixman_region16_t * region,  pixman_image_t * image);
extern void                 VARARGS68K _impl_pixman_region_fini(struct PixmanIFace *,  pixman_region16_t * region);
extern void                 VARARGS68K _impl_pixman_region_translate(struct PixmanIFace *,  pixman_region16_t * region,  int x,  int y);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_copy(struct PixmanIFace *,  pixman_region16_t * dest,  pixman_region16_t * source);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_intersect(struct PixmanIFace *,  pixman_region16_t * new_reg,  pixman_region16_t * reg1,  pixman_region16_t * reg2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_union(struct PixmanIFace *,  pixman_region16_t * new_reg,  pixman_region16_t * reg1,  pixman_region16_t * reg2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_union_rect(struct PixmanIFace *,  pixman_region16_t * dest,  pixman_region16_t * source,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_intersect_rect(struct PixmanIFace *,  pixman_region16_t * dest,  pixman_region16_t * source,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_subtract(struct PixmanIFace *,  pixman_region16_t * reg_d,  pixman_region16_t * reg_m,  pixman_region16_t * reg_s);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_inverse(struct PixmanIFace *,  pixman_region16_t * new_reg,  pixman_region16_t * reg1,  pixman_box16_t * inv_rect);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_contains_point(struct PixmanIFace *,  pixman_region16_t * region,  int x,  int y,  pixman_box16_t * box);
extern pixman_region_overlap_t VARARGS68K _impl_pixman_region_contains_rectangle(struct PixmanIFace *,  pixman_region16_t * region,  pixman_box16_t * prect);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_not_empty(struct PixmanIFace *,  pixman_region16_t * region);
extern pixman_box16_t *     VARARGS68K _impl_pixman_region_extents(struct PixmanIFace *,  pixman_region16_t * region);
extern int                  VARARGS68K _impl_pixman_region_n_rects(struct PixmanIFace *,  pixman_region16_t * region);
extern pixman_box16_t *     VARARGS68K _impl_pixman_region_rectangles(struct PixmanIFace *,  pixman_region16_t * region,  int * n_rects);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_equal(struct PixmanIFace *,  pixman_region16_t * region1,  pixman_region16_t * region2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region_selfcheck(struct PixmanIFace *,  pixman_region16_t * region);
extern void                 VARARGS68K _impl_pixman_region_reset(struct PixmanIFace *,  pixman_region16_t * region,  pixman_box16_t * box);
extern void                 VARARGS68K _impl_pixman_region_clear(struct PixmanIFace *,  pixman_region16_t * region);
extern void                 VARARGS68K _impl_pixman_region32_init(struct PixmanIFace *,  pixman_region32_t * region);
extern void                 VARARGS68K _impl_pixman_region32_init_rect(struct PixmanIFace *,  pixman_region32_t * region,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_init_rects(struct PixmanIFace *,  pixman_region32_t * region, const pixman_box32_t * boxes,  int count);
extern void                 VARARGS68K _impl_pixman_region32_init_with_extents(struct PixmanIFace *,  pixman_region32_t * region,  pixman_box32_t * extents);
extern void                 VARARGS68K _impl_pixman_region32_init_from_image(struct PixmanIFace *,  pixman_region32_t * region,  pixman_image_t * image);
extern void                 VARARGS68K _impl_pixman_region32_fini(struct PixmanIFace *,  pixman_region32_t * region);
extern void                 VARARGS68K _impl_pixman_region32_translate(struct PixmanIFace *,  pixman_region32_t * region,  int x,  int y);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_copy(struct PixmanIFace *,  pixman_region32_t * dest,  pixman_region32_t * source);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_intersect(struct PixmanIFace *,  pixman_region32_t * new_reg,  pixman_region32_t * reg1,  pixman_region32_t * reg2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_union(struct PixmanIFace *,  pixman_region32_t * new_reg,  pixman_region32_t * reg1,  pixman_region32_t * reg2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_intersect_rect(struct PixmanIFace *,  pixman_region32_t * dest,  pixman_region32_t * source,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_union_rect(struct PixmanIFace *,  pixman_region32_t * dest,  pixman_region32_t * source,  int x,  int y,  unsigned width,  unsigned height);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_subtract(struct PixmanIFace *,  pixman_region32_t * reg_d,  pixman_region32_t * reg_m,  pixman_region32_t * reg_s);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_inverse(struct PixmanIFace *,  pixman_region32_t * new_reg,  pixman_region32_t * reg1,  pixman_box32_t * inv_rect);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_contains_point(struct PixmanIFace *,  pixman_region32_t * region,  int x,  int y,  pixman_box32_t * box);
extern pixman_region_overlap_t VARARGS68K _impl_pixman_region32_contains_rectangle(struct PixmanIFace *,  pixman_region32_t * region,  pixman_box32_t * prect);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_not_empty(struct PixmanIFace *,  pixman_region32_t * region);
extern pixman_box32_t *     VARARGS68K _impl_pixman_region32_extents(struct PixmanIFace *,  pixman_region32_t * region);
extern int                  VARARGS68K _impl_pixman_region32_n_rects(struct PixmanIFace *,  pixman_region32_t * region);
extern pixman_box32_t *     VARARGS68K _impl_pixman_region32_rectangles(struct PixmanIFace *,  pixman_region32_t * region,  int * n_rects);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_equal(struct PixmanIFace *,  pixman_region32_t * region1,  pixman_region32_t * region2);
extern pixman_bool_t        VARARGS68K _impl_pixman_region32_selfcheck(struct PixmanIFace *,  pixman_region32_t * region);
extern void                 VARARGS68K _impl_pixman_region32_reset(struct PixmanIFace *,  pixman_region32_t * region,  pixman_box32_t * box);
extern void                 VARARGS68K _impl_pixman_region32_clear(struct PixmanIFace *,  pixman_region32_t * region);
extern pixman_bool_t        VARARGS68K _impl_pixman_blt(struct PixmanIFace *,  uint32_t * src_bits,  uint32_t * dst_bits,  int src_stride,  int dst_stride,  int src_bpp,  int dst_bpp,  int src_x,  int src_y,  int dest_x,  int dest_y,  int width,  int height);
extern pixman_bool_t        VARARGS68K _impl_pixman_fill(struct PixmanIFace *,  uint32_t * bits,  int stride,  int bpp,  int x,  int y,  int width,  int height,  uint32_t _xor);
extern int                  VARARGS68K _impl_pixman_version(struct PixmanIFace *);
extern const char *         VARARGS68K _impl_pixman_version_string(struct PixmanIFace *);
extern pixman_bool_t        VARARGS68K _impl_pixman_format_supported_destination(struct PixmanIFace *,  pixman_format_code_t format);
extern pixman_bool_t        VARARGS68K _impl_pixman_format_supported_source(struct PixmanIFace *,  pixman_format_code_t format);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_create_solid_fill(struct PixmanIFace *,  pixman_color_t * color);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_create_linear_gradient(struct PixmanIFace *,  pixman_point_fixed_t * p1,  pixman_point_fixed_t * p2, const pixman_gradient_stop_t * stops,  int n_stops);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_create_radial_gradient(struct PixmanIFace *,  pixman_point_fixed_t * inner,  pixman_point_fixed_t * outer,  pixman_fixed_t inner_radius,  pixman_fixed_t outer_radius, const pixman_gradient_stop_t * stops,  int n_stops);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_create_conical_gradient(struct PixmanIFace *,  pixman_point_fixed_t * center,  pixman_fixed_t angle, const pixman_gradient_stop_t * stops,  int n_stops);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_create_bits(struct PixmanIFace *,  pixman_format_code_t format,  int width,  int height,  uint32_t * bits,  int rowstride_bytes);
extern pixman_image_t *     VARARGS68K _impl_pixman_image_ref(struct PixmanIFace *,  pixman_image_t * image);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_unref(struct PixmanIFace *,  pixman_image_t * image);
extern void                 VARARGS68K _impl_pixman_image_set_destroy_function(struct PixmanIFace *,  pixman_image_t * image,  pixman_image_destroy_func_t function,  void * data);
extern void *               VARARGS68K _impl_pixman_image_get_destroy_data(struct PixmanIFace *,  pixman_image_t * image);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_set_clip_region(struct PixmanIFace *,  pixman_image_t * image,  pixman_region16_t * region);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_set_clip_region32(struct PixmanIFace *,  pixman_image_t * image,  pixman_region32_t * region);
extern void                 VARARGS68K _impl_pixman_image_set_has_client_clip(struct PixmanIFace *,  pixman_image_t * image,  pixman_bool_t clien_clip);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_set_transform(struct PixmanIFace *,  pixman_image_t * image, const pixman_transform_t * transform);
extern void                 VARARGS68K _impl_pixman_image_set_repeat(struct PixmanIFace *,  pixman_image_t * image,  pixman_repeat_t repeat);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_set_filter(struct PixmanIFace *,  pixman_image_t * image,  pixman_filter_t filter, const pixman_fixed_t * filter_params,  int n_filter_params);
extern void                 VARARGS68K _impl_pixman_image_set_source_clipping(struct PixmanIFace *,  pixman_image_t * image,  pixman_bool_t source_clipping);
extern void                 VARARGS68K _impl_pixman_image_set_alpha_map(struct PixmanIFace *,  pixman_image_t * image,  pixman_image_t * alpha_map,  int16_t x,  int16_t y);
extern void                 VARARGS68K _impl_pixman_image_set_component_alpha(struct PixmanIFace *,  pixman_image_t * image,  pixman_bool_t component_alpha);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_get_component_alpha(struct PixmanIFace *,  pixman_image_t * image);
extern void                 VARARGS68K _impl_pixman_image_set_accessors(struct PixmanIFace *,  pixman_image_t * image,  pixman_read_memory_func_t read_func,  pixman_write_memory_func_t write_func);
extern void                 VARARGS68K _impl_pixman_image_set_indexed(struct PixmanIFace *,  pixman_image_t * image, const pixman_indexed_t * indexed);
extern uint32_t *           VARARGS68K _impl_pixman_image_get_data(struct PixmanIFace *,  pixman_image_t * image);
extern int                  VARARGS68K _impl_pixman_image_get_width(struct PixmanIFace *,  pixman_image_t * image);
extern int                  VARARGS68K _impl_pixman_image_get_height(struct PixmanIFace *,  pixman_image_t * image);
extern int                  VARARGS68K _impl_pixman_image_get_stride(struct PixmanIFace *,  pixman_image_t * image);
extern int                  VARARGS68K _impl_pixman_image_get_depth(struct PixmanIFace *,  pixman_image_t * image);
extern pixman_format_code_t VARARGS68K _impl_pixman_image_get_format(struct PixmanIFace *,  pixman_image_t * image);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_fill_rectangles(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * image,  pixman_color_t * color,  int n_rects, const pixman_rectangle16_t * rects);
extern pixman_bool_t        VARARGS68K _impl_pixman_image_fill_boxes(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * dest,  pixman_color_t * color,  int n_boxes, const pixman_box32_t * boxes);
extern pixman_bool_t        VARARGS68K _impl_pixman_compute_composite_region(struct PixmanIFace *,  pixman_region16_t * region,  pixman_image_t * src_image,  pixman_image_t * mask_image,  pixman_image_t * dest_image,  int16_t src_x,  int16_t src_y,  int16_t mask_x,  int16_t mask_y,  int16_t dest_x,  int16_t dest_y,  uint16_t width,  uint16_t height);
extern void                 VARARGS68K _impl_pixman_image_composite(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * mask,  pixman_image_t * dest,  int16_t src_x,  int16_t src_y,  int16_t mask_x,  int16_t mask_y,  int16_t dest_x,  int16_t dest_y,  uint16_t width,  uint16_t height);
extern void                 VARARGS68K _impl_pixman_image_composite32(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * mask,  pixman_image_t * dest,  int32_t src_x,  int32_t src_y,  int32_t mask_x,  int32_t mask_y,  int32_t dest_x,  int32_t dest_y,  int32_t width,  int32_t height);
extern void                 VARARGS68K _impl_pixman_disable_out_of_bounds_workaround(struct PixmanIFace *);
extern pixman_glyph_cache_t * VARARGS68K _impl_pixman_glyph_cache_create(struct PixmanIFace *);
extern void                 VARARGS68K _impl_pixman_glyph_cache_destroy(struct PixmanIFace *,  pixman_glyph_cache_t * cache);
extern void                 VARARGS68K _impl_pixman_glyph_cache_freeze(struct PixmanIFace *,  pixman_glyph_cache_t * cache);
extern void                 VARARGS68K _impl_pixman_glyph_cache_thaw(struct PixmanIFace *,  pixman_glyph_cache_t * cache);
extern const void *         VARARGS68K _impl_pixman_glyph_cache_lookup(struct PixmanIFace *,  pixman_glyph_cache_t * cache,  void * font_key,  void * glyph_key);
extern const void *         VARARGS68K _impl_pixman_glyph_cache_insert(struct PixmanIFace *,  pixman_glyph_cache_t * cache,  void * font_key,  void * glyph_key,  int origin_x,  int origin_y,  pixman_image_t * glyph_image);
extern void                 VARARGS68K _impl_pixman_glyph_cache_remove(struct PixmanIFace *,  pixman_glyph_cache_t * cache,  void * font_key,  void * glyph_key);
extern void                 VARARGS68K _impl_pixman_glyph_get_extents(struct PixmanIFace *,  pixman_glyph_cache_t * cache,  int n_glyphs,  pixman_glyph_t * glyphs,  pixman_box32_t * extents);
extern pixman_format_code_t VARARGS68K _impl_pixman_glyph_get_mask_format(struct PixmanIFace *,  pixman_glyph_cache_t * cache,  int n_glyphs,  pixman_glyph_t * glyphs);
extern void                 VARARGS68K _impl_pixman_composite_glyphs(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * dest,  pixman_format_code_t mask_format,  int32_t src_x,  int32_t src_y,  int32_t mask_x,  int32_t mask_y,  int32_t dest_x,  int32_t dest_y,  int32_t width,  int32_t height,  pixman_glyph_cache_t * cache,  int n_glyphs,  pixman_glyph_t * glyphs);
extern void                 VARARGS68K _impl_pixman_composite_glyphs_no_mask(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * dest,  int32_t src_x,  int32_t src_y,  int32_t dest_x,  int32_t dest_y,  pixman_glyph_cache_t * cache,  int n_glyphs,  pixman_glyph_t * glyphs);
extern pixman_fixed_t       VARARGS68K _impl_pixman_sample_ceil_y(struct PixmanIFace *,  pixman_fixed_t y,  int bpp);
extern pixman_fixed_t       VARARGS68K _impl_pixman_sample_floor_y(struct PixmanIFace *,  pixman_fixed_t y,  int bpp);
extern void                 VARARGS68K _impl_pixman_edge_step(struct PixmanIFace *,  pixman_edge_t * e,  int n);
extern void                 VARARGS68K _impl_pixman_edge_init(struct PixmanIFace *,  pixman_edge_t * e,  int bpp,  pixman_fixed_t y_start,  pixman_fixed_t x_top,  pixman_fixed_t y_top,  pixman_fixed_t x_bot,  pixman_fixed_t y_bot);
extern void                 VARARGS68K _impl_pixman_line_fixed_edge_init(struct PixmanIFace *,  pixman_edge_t * e,  int bpp,  pixman_fixed_t y, const pixman_line_fixed_t * line,  int x_off,  int y_off);
extern void                 VARARGS68K _impl_pixman_rasterize_edges(struct PixmanIFace *,  pixman_image_t * image,  pixman_edge_t * l,  pixman_edge_t * r,  pixman_fixed_t t,  pixman_fixed_t b);
extern void                 VARARGS68K _impl_pixman_add_traps(struct PixmanIFace *,  pixman_image_t * image,  int16_t x_off,  int16_t y_off,  int ntrap,  pixman_trap_t * traps);
extern void                 VARARGS68K _impl_pixman_add_trapezoids(struct PixmanIFace *,  pixman_image_t * image,  int16_t x_off,  int y_off,  int ntraps, const pixman_trapezoid_t * traps);
extern void                 VARARGS68K _impl_pixman_rasterize_trapezoid(struct PixmanIFace *,  pixman_image_t * image, const pixman_trapezoid_t * trap,  int x_off,  int y_off);
extern void                 VARARGS68K _impl_pixman_composite_trapezoids(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * dst,  pixman_format_code_t mask_format,  int x_src,  int y_src,  int x_dst,  int y_dst,  int n_traps, const pixman_trapezoid_t * traps);
extern void                 VARARGS68K _impl_pixman_composite_triangles(struct PixmanIFace *,  pixman_op_t op,  pixman_image_t * src,  pixman_image_t * dst,  pixman_format_code_t mask_format,  int x_src,  int y_src,  int x_dst,  int y_dst,  int n_tris, const pixman_triangle_t * tris);
extern void                 VARARGS68K _impl_pixman_add_triangles(struct PixmanIFace *,  pixman_image_t * image,  int32_t x_off,  int32_t y_off,  int n_tris, const pixman_triangle_t * tris);
